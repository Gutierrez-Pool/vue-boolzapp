.white {
    position: absolute;
    top: 150px;
    z-index: -1;

    width: 100%;
    height: calc(100vh - 150px);

    background-color: #d9dbd4;
}

.green {
    position: absolute;
    top: 0;
    z-index: -1;

    width: 100%;
    height: 150px;

    background-color: #009688;
}

.container .row {
    --bs-gutter-x: 0;
}

#ui-wrapper {
    width: 100vw;
    height: 100vh;

    padding: 25px;
}



main .row {
    height: 100%;
}


#user, .chat-contatti {
    background-color: #eaeaea;
}

/* #USER */
.header {
    padding: 10px 25px 10px 10px;
}

.header-img {
    width: 52px;
    border-radius: 50%;
}

.header .fa-solid {
    font-size: 23px;
    color: #b1b1b1;
}
/* FINE #USER */

/* NOTIFICHE */
#notifiche {
    background-color: #8edafc;
    padding: 15px 20px;
}

#notifiche .fa-solid {
    font-size: 22px;
    padding: 15px 11px;
    border-radius: 50%;
    background-color: white;
    color: #8edafc;
}

#notifiche a {
    font-size: 0.8em;
    color: grey;
}
/* FINE NOTIFICHE */


/* CONTATTI */
#cerca-contatti {
    padding: 7px;
    background-color: #fafafa;
}

#cerca-contatti button {
    background-color: white;
}

#contatti li {
    padding: 10px 20px;
    cursor: pointer;
}

#contatti img {
    width: 62px;
    border-radius: 50%;
}

#contatti .active {
    background-color: #e9ebeb;
    color: black;
    border: 0px;
}
/* FINE CONTATTI */

.active-chat {
    height: 100%;
}

.chat {
    background-image: url("../img/mine.jpg");
    height: calc(100% - 52px - 38px);
}

.chat .messaggi {
    display: flex;
    flex-flow: column;
    align-items: flex-start;
    gap: 10px;

    max-width: 800px;

    margin: 0 auto;

    padding: 50px 20px;

}


/* message */

.message {
    position: relative;

    max-width: 320px;
    min-width: 100px;

    border-radius: 8px;
    background-color: #d5f9ba;

    padding: 18px 16px;
}

.message .time {
    position: absolute;
    bottom: 6px;
    right: 6px;

    font-size: 7px;
    color: #999;
}

.message.sent {
    align-self: flex-end;
}

.message.received {
    background-color: white;
}

/* /message */

main {
    position: relative;
}

.input-text {
    padding: 10px 20px;
    background-color: #f3eeea;
}

.input-text .fa-solid,
.input-text .fa-regular {
    font-size: 20px;
    margin-inline: 20px;
    color: #6b7376;
}





/* Funzionalità

A) cambiare icona in basso a destra (a fianco all'input per scrivere un nuovo messaggio) finché l'utente sta scrivendo: di default si visualizza l'icona del microfono, quando l'input non è vuoto si visualizza l'icona dell'aeroplano. Quando il messaggio è stato inviato e l'input si svuota, si torna a visualizzare il microfono. B) inviare quindi il messaggio anche cliccando sull'icona dell'aeroplano

predisporre una lista di frasi e/o citazioni da utilizzare al posto della risposta "ok:" quando il pc risponde, anziché scrivere "ok", scegliere una frase random dalla lista e utilizzarla come testo del messaggio di risposta del pc

inserire l'orario corretto nei messaggi (vedi la libreria Luxon, importabile tramite cdn con questo tag: <script src="https://cdn.jsdelivr.net/npm/luxon@3.4.4/build/global/luxon.min.js"></script>) e inizializzabile nel vostro JS con const {DateTime} = luxon;

sotto al nome del contatto nella parte in alto a destra, cambiare l'indicazione dello stato: visualizzare il testo "sta scrivendo..." nel timeout in cui il pc risponde, poi mantenere la scritta "online" per un paio di secondi e infine visualizzare "ultimo accesso alle xx:yy" con l'orario corretto

dare la possibilità all'utente di aggiungere una nuova conversazione, inserendo in un popup il nome e il link all'icona del nuovo contatto

fare scroll in giù in automatico fino al messaggio più recente, quando viene aggiunto un nuovo messaggio alla conversazione (NB: potrebbe esserci bisogno di utilizzare nextTick: https://vuejs.org/api/general.html#nexttick)



Grafica

visualizzare un messaggio di benvenuto che invita l'utente a selezionare un contatto dalla lista per visualizzare i suoi messaggi, anziché attivare di default la prima conversazione

aggiungere una splash page visibile per 1s all'apertura dell'app

A) rendere l'app responsive e fruibile anche su mobile: di default si visualizza solo la lista dei contatti e cliccando su un contatto si vedono i messaggi di quel contatto. B) aggiungere quindi un'icona con una freccia verso sinistra per tornare indietro, dalla visualizzazione della chat alla visualizzazione di tutti i contatti

aggiungere un'icona per ingrandire o rimpicciolire il font: dovrebbe essere sufficiente aggiungere una classe al wrapper principale

aggiungere un'icona per cambiare la modalità light/dark: dovrebbe essere sufficiente aggiungere una classe al wrapper principale */